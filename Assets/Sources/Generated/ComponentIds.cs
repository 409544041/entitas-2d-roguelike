//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentIndicesGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class ComponentIds {
    public const int ActiveTurnBased = 0;
    public const int AIMove = 1;
    public const int AIMoveTarget = 2;
    public const int Animation = 3;
    public const int AudioAttackSource = 4;
    public const int Audio = 5;
    public const int AudioDeathSource = 6;
    public const int AudioPickupSource = 7;
    public const int AudioWalkSource = 8;
    public const int Controllable = 9;
    public const int Coroutine = 10;
    public const int DamageSprite = 11;
    public const int DeleteOnExit = 12;
    public const int Destructible = 13;
    public const int Exit = 14;
    public const int FoodBag = 15;
    public const int Food = 16;
    public const int FoodDamager = 17;
    public const int GameBoardCache = 18;
    public const int GameBoard = 19;
    public const int GameBoardElement = 20;
    public const int GameOver = 21;
    public const int GridPositions = 22;
    public const int Level = 23;
    public const int LevelTransitionDelay = 24;
    public const int MoveInput = 25;
    public const int NestedView = 26;
    public const int NestedViewContainer = 27;
    public const int NextTurn = 28;
    public const int Position = 29;
    public const int Resource = 30;
    public const int SkipTurn = 31;
    public const int SmoothMove = 32;
    public const int SmoothMoveInProgress = 33;
    public const int TurnBased = 34;
    public const int View = 35;
    public const int ViewContainer = 36;

    public const int TotalComponents = 37;

    public static readonly string[] componentNames = {
        "ActiveTurnBased",
        "AIMove",
        "AIMoveTarget",
        "Animation",
        "AudioAttackSource",
        "Audio",
        "AudioDeathSource",
        "AudioPickupSource",
        "AudioWalkSource",
        "Controllable",
        "Coroutine",
        "DamageSprite",
        "DeleteOnExit",
        "Destructible",
        "Exit",
        "FoodBag",
        "Food",
        "FoodDamager",
        "GameBoardCache",
        "GameBoard",
        "GameBoardElement",
        "GameOver",
        "GridPositions",
        "Level",
        "LevelTransitionDelay",
        "MoveInput",
        "NestedView",
        "NestedViewContainer",
        "NextTurn",
        "Position",
        "Resource",
        "SkipTurn",
        "SmoothMove",
        "SmoothMoveInProgress",
        "TurnBased",
        "View",
        "ViewContainer"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(ActiveTurnBasedComponent),
        typeof(AIMoveComponent),
        typeof(AIMoveTargetComponent),
        typeof(AnimationComponent),
        typeof(AudioAttackSourceComponent),
        typeof(AudioComponent),
        typeof(AudioDeathSourceComponent),
        typeof(AudioPickupSourceComponent),
        typeof(AudioWalkSourceComponent),
        typeof(ControllableComponent),
        typeof(CoroutineComponent),
        typeof(DamageSpriteComponent),
        typeof(DeleteOnExitComponent),
        typeof(DestructibleComponent),
        typeof(ExitComponent),
        typeof(FoodBagComponent),
        typeof(FoodComponent),
        typeof(FoodDamagerComponent),
        typeof(GameBoardCacheComponent),
        typeof(GameBoardComponent),
        typeof(GameBoardElementComponent),
        typeof(GameOverComponent),
        typeof(GridPositionsComponent),
        typeof(LevelComponent),
        typeof(LevelTransitionDelayComponent),
        typeof(MoveInputComponent),
        typeof(NestedViewComponent),
        typeof(NestedViewContainerComponent),
        typeof(NextTurnComponent),
        typeof(PositionComponent),
        typeof(ResourceComponent),
        typeof(SkipTurnComponent),
        typeof(SmoothMoveComponent),
        typeof(SmoothMoveInProgressComponent),
        typeof(TurnBasedComponent),
        typeof(ViewComponent),
        typeof(ViewContainerComponent)
    };
}