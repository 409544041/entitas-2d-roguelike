//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public AudioPickupSourceComponent audioPickupSource { get { return (AudioPickupSourceComponent)GetComponent(ComponentIds.AudioPickupSource); } }

        public bool hasAudioPickupSource { get { return HasComponent(ComponentIds.AudioPickupSource); } }

        public Entity AddAudioPickupSource(Audio[] newClips, bool newRandomizePitch) {
            var component = CreateComponent<AudioPickupSourceComponent>(ComponentIds.AudioPickupSource);
            component.clips = newClips;
            component.randomizePitch = newRandomizePitch;
            return AddComponent(ComponentIds.AudioPickupSource, component);
        }

        public Entity ReplaceAudioPickupSource(Audio[] newClips, bool newRandomizePitch) {
            var component = CreateComponent<AudioPickupSourceComponent>(ComponentIds.AudioPickupSource);
            component.clips = newClips;
            component.randomizePitch = newRandomizePitch;
            ReplaceComponent(ComponentIds.AudioPickupSource, component);
            return this;
        }

        public Entity RemoveAudioPickupSource() {
            return RemoveComponent(ComponentIds.AudioPickupSource);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherAudioPickupSource;

        public static IMatcher AudioPickupSource {
            get {
                if (_matcherAudioPickupSource == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.AudioPickupSource);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherAudioPickupSource = matcher;
                }

                return _matcherAudioPickupSource;
            }
        }
    }
}
