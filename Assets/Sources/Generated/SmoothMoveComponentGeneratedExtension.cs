//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public SmoothMoveComponent smoothMove { get { return (SmoothMoveComponent)GetComponent(ComponentIds.SmoothMove); } }

        public bool hasSmoothMove { get { return HasComponent(ComponentIds.SmoothMove); } }

        public Entity AddSmoothMove(float newMoveTime) {
            var component = CreateComponent<SmoothMoveComponent>(ComponentIds.SmoothMove);
            component.moveTime = newMoveTime;
            return AddComponent(ComponentIds.SmoothMove, component);
        }

        public Entity ReplaceSmoothMove(float newMoveTime) {
            var component = CreateComponent<SmoothMoveComponent>(ComponentIds.SmoothMove);
            component.moveTime = newMoveTime;
            ReplaceComponent(ComponentIds.SmoothMove, component);
            return this;
        }

        public Entity RemoveSmoothMove() {
            return RemoveComponent(ComponentIds.SmoothMove);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherSmoothMove;

        public static IMatcher SmoothMove {
            get {
                if (_matcherSmoothMove == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.SmoothMove);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherSmoothMove = matcher;
                }

                return _matcherSmoothMove;
            }
        }
    }
}
