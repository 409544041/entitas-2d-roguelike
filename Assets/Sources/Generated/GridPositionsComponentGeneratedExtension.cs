//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public GridPositionsComponent gridPositions { get { return (GridPositionsComponent)GetComponent(ComponentIds.GridPositions); } }

        public bool hasGridPositions { get { return HasComponent(ComponentIds.GridPositions); } }

        public Entity AddGridPositions(System.Collections.Generic.IList<UnityEngine.Vector2> newValue) {
            var component = CreateComponent<GridPositionsComponent>(ComponentIds.GridPositions);
            component.value = newValue;
            return AddComponent(ComponentIds.GridPositions, component);
        }

        public Entity ReplaceGridPositions(System.Collections.Generic.IList<UnityEngine.Vector2> newValue) {
            var component = CreateComponent<GridPositionsComponent>(ComponentIds.GridPositions);
            component.value = newValue;
            ReplaceComponent(ComponentIds.GridPositions, component);
            return this;
        }

        public Entity RemoveGridPositions() {
            return RemoveComponent(ComponentIds.GridPositions);
        }
    }

    public partial class Pool {
        public Entity gridPositionsEntity { get { return GetGroup(Matcher.GridPositions).GetSingleEntity(); } }

        public GridPositionsComponent gridPositions { get { return gridPositionsEntity.gridPositions; } }

        public bool hasGridPositions { get { return gridPositionsEntity != null; } }

        public Entity SetGridPositions(System.Collections.Generic.IList<UnityEngine.Vector2> newValue) {
            if (hasGridPositions) {
                throw new EntitasException("Could not set gridPositions!\n" + this + " already has an entity with GridPositionsComponent!",
                    "You should check if the pool already has a gridPositionsEntity before setting it or use pool.ReplaceGridPositions().");
            }
            var entity = CreateEntity();
            entity.AddGridPositions(newValue);
            return entity;
        }

        public Entity ReplaceGridPositions(System.Collections.Generic.IList<UnityEngine.Vector2> newValue) {
            var entity = gridPositionsEntity;
            if (entity == null) {
                entity = SetGridPositions(newValue);
            } else {
                entity.ReplaceGridPositions(newValue);
            }

            return entity;
        }

        public void RemoveGridPositions() {
            DestroyEntity(gridPositionsEntity);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherGridPositions;

        public static IMatcher GridPositions {
            get {
                if (_matcherGridPositions == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.GridPositions);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherGridPositions = matcher;
                }

                return _matcherGridPositions;
            }
        }
    }
}
