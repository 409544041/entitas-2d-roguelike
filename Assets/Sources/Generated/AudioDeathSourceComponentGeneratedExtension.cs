//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {
    public partial class Entity {
        public AudioDeathSourceComponent audioDeathSource { get { return (AudioDeathSourceComponent)GetComponent(ComponentIds.AudioDeathSource); } }

        public bool hasAudioDeathSource { get { return HasComponent(ComponentIds.AudioDeathSource); } }

        public Entity AddAudioDeathSource(Audio[] newClips, bool newRandomizePitch) {
            var component = CreateComponent<AudioDeathSourceComponent>(ComponentIds.AudioDeathSource);
            component.clips = newClips;
            component.randomizePitch = newRandomizePitch;
            return AddComponent(ComponentIds.AudioDeathSource, component);
        }

        public Entity ReplaceAudioDeathSource(Audio[] newClips, bool newRandomizePitch) {
            var component = CreateComponent<AudioDeathSourceComponent>(ComponentIds.AudioDeathSource);
            component.clips = newClips;
            component.randomizePitch = newRandomizePitch;
            ReplaceComponent(ComponentIds.AudioDeathSource, component);
            return this;
        }

        public Entity RemoveAudioDeathSource() {
            return RemoveComponent(ComponentIds.AudioDeathSource);
        }
    }

    public partial class Matcher {
        static IMatcher _matcherAudioDeathSource;

        public static IMatcher AudioDeathSource {
            get {
                if (_matcherAudioDeathSource == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.AudioDeathSource);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherAudioDeathSource = matcher;
                }

                return _matcherAudioDeathSource;
            }
        }
    }
}
